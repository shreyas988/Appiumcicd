<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="3" failed="3" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[This is sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/shreyas/TDD/TDDFramework/Screenshots/Android_Any device name_30-11-2020-18-57-36/LoginTests/invalidPassword.png'> <img src='/Users/shreyas/TDD/TDDFramework/Screenshots/Android_Any device name_30-11-2020-18-57-36/LoginTests/invalidPassword.png' height='100' width='100'/></a>]]>
    </line>
    <line>
      <![CDATA[This is sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/shreyas/TDD/TDDFramework/Screenshots/iOS_iPhone 11_30-11-2020-18-57-36/LoginTests/invalidPassword.png'> <img src='/Users/shreyas/TDD/TDDFramework/Screenshots/iOS_iPhone 11_30-11-2020-18-57-36/LoginTests/invalidPassword.png' height='100' width='100'/></a>]]>
    </line>
    <line>
      <![CDATA[This is sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/shreyas/TDD/TDDFramework/Screenshots/iOS_iPhone 11_30-11-2020-18-57-36/LoginTests/successLogin.png'> <img src='/Users/shreyas/TDD/TDDFramework/Screenshots/iOS_iPhone 11_30-11-2020-18-57-36/LoginTests/successLogin.png' height='100' width='100'/></a>]]>
    </line>
  </reporter-output>
  <suite started-at="2020-11-30T13:27:35Z" name="Suite" finished-at="2020-11-30T13:29:00Z" duration-ms="84840">
    <groups>
    </groups>
    <test started-at="2020-11-30T13:27:35Z" name="Android" finished-at="2020-11-30T13:28:09Z" duration-ms="33865">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:27:35Z" name="beforeTest" finished-at="2020-11-30T13:27:50Z" duration-ms="14293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Any device name]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:27:50Z" name="beforeClass" finished-at="2020-11-30T13:27:52Z" duration-ms="1977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:27:52Z" name="beforeMethod" finished-at="2020-11-30T13:27:52Z" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:27:52Z" name="invalidPassword" finished-at="2020-11-30T13:27:59Z" duration-ms="6793" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Username and password do not match any user in this service.new] but found [Username and password do not match any user in this service.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Username and password do not match any user in this service.new] but found [Username and password do not match any user in this service.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.qa.tests.LoginTests.invalidPassword(LoginTests.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/shreyas/TDD/TDDFramework/Screenshots/Android_Any device name_30-11-2020-18-57-36/LoginTests/invalidPassword.png'> <img src='/Users/shreyas/TDD/TDDFramework/Screenshots/Android_Any device name_30-11-2020-18-57-36/LoginTests/invalidPassword.png' height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:27:59Z" name="afterMethod" finished-at="2020-11-30T13:27:59Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:27:59Z" name="beforeMethod" finished-at="2020-11-30T13:27:59Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidusername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidusername()[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:27:59Z" name="invalidusername" finished-at="2020-11-30T13:28:03Z" duration-ms="4172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidusername -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:28:03Z" name="afterMethod" finished-at="2020-11-30T13:28:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidusername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:28:03Z" name="beforeMethod" finished-at="2020-11-30T13:28:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successLogin()[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:28:03Z" name="successLogin" finished-at="2020-11-30T13:28:09Z" duration-ms="5580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successLogin -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:28:09Z" name="afterMethod" finished-at="2020-11-30T13:28:09Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:28:09Z" name="afterClass" finished-at="2020-11-30T13:28:09Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@9225652]" started-at="2020-11-30T13:28:09Z" name="afterTest" finished-at="2020-11-30T13:28:09Z" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- Android -->
    <test started-at="2020-11-30T13:27:35Z" name="iOS" finished-at="2020-11-30T13:29:00Z" duration-ms="84840">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:27:34Z" name="beforeSuite" finished-at="2020-11-30T13:27:35Z" duration-ms="1094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:27:35Z" name="beforeTest" finished-at="2020-11-30T13:28:08Z" duration-ms="32370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone 11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[AndroidOnly]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[AndroidOnly]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10001]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[11001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:08Z" name="beforeClass" finished-at="2020-11-30T13:28:12Z" duration-ms="3871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:12Z" name="beforeMethod" finished-at="2020-11-30T13:28:12Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidPassword()[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:12Z" name="invalidPassword" finished-at="2020-11-30T13:28:27Z" duration-ms="15560" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Username and password do not match any user in this service.new] but found [Username and password do not match any user in this service.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Username and password do not match any user in this service.new] but found [Username and password do not match any user in this service.]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.qa.tests.LoginTests.invalidPassword(LoginTests.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/shreyas/TDD/TDDFramework/Screenshots/iOS_iPhone 11_30-11-2020-18-57-36/LoginTests/invalidPassword.png'> <img src='/Users/shreyas/TDD/TDDFramework/Screenshots/iOS_iPhone 11_30-11-2020-18-57-36/LoginTests/invalidPassword.png' height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:28Z" name="afterMethod" finished-at="2020-11-30T13:28:28Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:28Z" name="beforeMethod" finished-at="2020-11-30T13:28:28Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidusername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidusername()[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:28Z" name="invalidusername" finished-at="2020-11-30T13:28:44Z" duration-ms="16481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidusername -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:44Z" name="afterMethod" finished-at="2020-11-30T13:28:44Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidusername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:44Z" name="beforeMethod" finished-at="2020-11-30T13:28:44Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successLogin()[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:44Z" name="successLogin" finished-at="2020-11-30T13:28:59Z" duration-ms="14963" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Can't locate an element by this strategy: By.chained({By.id: test-LOGIN})]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.id: test-LOGIN})
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
at io.appium.java_client.ios.IOSElement$$EnhancerByCGLIB$$d311658.getText(<generated>)
at com.qa.BaseTest.clickElement(BaseTest.java:288)
at com.qa.pageobjects.LoginScreen.clickLoginButton(LoginScreen.java:53)
at com.qa.tests.LoginTests.successLogin(LoginTests.java:125)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@3b079676 (tried for 1 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:304)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
... 25 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.id: test-LOGIN})
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'ALIPL0482.local', ip: '2405:204:5686:8c4:e4ef:f328:1d0a:497c%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '14.0.1'
Driver info: driver.version: IOSDriver
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.findElement(IOSDriver.java:1)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 27 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[This is sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/shreyas/TDD/TDDFramework/Screenshots/iOS_iPhone 11_30-11-2020-18-57-36/LoginTests/successLogin.png'> <img src='/Users/shreyas/TDD/TDDFramework/Screenshots/iOS_iPhone 11_30-11-2020-18-57-36/LoginTests/successLogin.png' height='100' width='100'/></a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- successLogin -->
        <test-method is-config="true" signature="afterMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:59Z" name="afterMethod" finished-at="2020-11-30T13:28:59Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:59Z" name="afterTest" finished-at="2020-11-30T13:29:00Z" duration-ms="1022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:28:59Z" name="afterClass" finished-at="2020-11-30T13:28:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.qa.tests.LoginTests@41fbdac4]" started-at="2020-11-30T13:29:00Z" name="afterSuite" finished-at="2020-11-30T13:29:00Z" duration-ms="91" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- iOS -->
  </suite> <!-- Suite -->
</testng-results>
